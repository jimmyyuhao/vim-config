#################
# Rust Snippets #
#################

snippet snipDebugTrait "debug trait" b
#[derive(Debug)]
struct Abc{

}
println!("rect1 is {:#?}", abc);
endsnippet

snippet snipTraitDeclare "trait declare" b
pub trait ${1:traitName}{
	fn ${2:traitFuncName}(&self)->${3:returnType};
}
endsnippet

snippet snipTraitImplement "trait Implement on a Type" b
impl ${1:traitName} for ${2:structTypeName}{
	fn ${3:traitFuncName}(&self)->${4:returnType}{
		/*code block*/
	}
}
endsnippet

snippet snipTraitAsParam "traits as parameters,input type should support the trait" b
pub fn ${3:funcName}(${4:varName}:&impl ${1:traitName}+${2:traitName}){
}
endsnippet

snippet snipTraitBound "traits as parameters,use trait bound" b
pub fn ${4:funcName}<T:${1:traitName}+${2:traitName}>(${3:varName}:&T){
}
endsnippet

snippet snipTraitWhere "traits as parameters by using where" b
fn ${1:funcName}<T,U>(t:&T,u:&U)->i32
	where T:${2:trait1Name}+${3:trait2Name},
		U:${4:trait3Name}+${5:trait4Name}{
		t.$2();
		t.$3();
		u.$4();
		u.$5();
}
endsnippet

snippet snipReturnTrait "return a traits" b
fn ${1:funcName}(/*input param*/)->impl ${2:traitName} {
	/*fn body*/
}
endsnippet

